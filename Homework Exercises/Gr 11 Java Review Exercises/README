GRADE 11 JAVA REVIEW - PROGRAMMING EXERCISES

The following programming exercises can be done from previous grade 11 Java knowledge.

EASY: You should be able to complete these relatiely quickly!

1. [Input/Output, Loops]
  a) Write a program that lets you enter two sides of a right-angled triangle, then prints the 
    length of the hypotenuse.
  b) Adding to the above program, make sure the lengths input by the user are valid. If it is not valid, 
    you must ask again until valid numbers are entered.

2. [Loops]
  a) Write a program that finds the average between 5 numbers that are entered by the user.
  b) Adding to the above, program, find and display the lowest of the 5 numbers entered.

3. [Strings]
  Write a program that lets you enter a word and prints out hte number of vowels and the number of 
  consonants. The program should repeat asking for more words, until you enter "stop".

4. [Arrays, Methods]
  a) Write a method called MultipleThree that takes in a one-dimentional integer array as its
   parameter, and it returns the number of values in the array that are multiples of three.
   (You can make up an array in the main program to test your method.)
  b) Write a method called Difference that takes in a two-dimensional integer array as its
   parameter, and it returns the difference between the largest and smallest values in the array.
   (You can make up an array in the main program to test your method.)
  
 
MORE CHALLENGING:
 
1. Write a Java method called insertElement() that inserts an integer number into a sorted array
    of integers in the correct position. The method will have two parameters, the original sorted array
    and the numer you wish to insert. The method should return the new array (with the number
    inserted in the correct position).
    For example:
      int [] originalNumbers = {10, 20, 30, 40, 50, 60 70{;
      int [] newNumbers = insertElement(originalNumbers, 45);
      
      -> This would set newNumbers to {10, 20, 30, 40, 45, 50, 60, 70}
      
2. One way to "encrypt" a message is to shift each letter in the message a fixed number of positions. 
   For example, given "GOOD LUCK" if we shift each character 3 positons we would get JRRG OXFN".
   In this case, the non-letters (spaces etc.) were not shifted. This is known as a Caesar shift since it was
   used by Julius Caesar to send messages to his generals. To "decrypt" this message we just shift the
   encrypted message 3 positions back.
   
   a) Write a method called encryptMessage that will shift each letter in a string a given
      number of positions. (ie. You will need two parameters.)
   b) Write a similar method called decryptMessage that "unshifts" each lettre in a String a
      given number of positions.
      
3. Write a method called commonLetters that finds and displays all the letters ('a' to 'z') that
   are common to two strings. (ie. It takes in two parameters.)
   
   - These two strings will be read in by the user, and at the end, the program will display the
     string that is made up of all of letters common to both strings.
   - The string of common letters should be i nlower case and should not contain any
     duplicate letters.
   - If the two strings have no letters in common, you should return an empty string.
   - Your program should ignore case(i.e. 'A' and 'a' should be considered the same letter).
